[{"C:\\Pedro Docs\\Testes\\React Queue\\PedrosDynamicTimer\\src\\index.tsx":"1","C:\\Pedro Docs\\Testes\\React Queue\\PedrosDynamicTimer\\src\\App.tsx":"2","C:\\Pedro Docs\\Testes\\React Queue\\PedrosDynamicTimer\\src\\styles\\App.ts":"3","C:\\Pedro Docs\\Testes\\React Queue\\PedrosDynamicTimer\\src\\styles\\global.ts":"4"},{"size":208,"mtime":1624321232505,"results":"5","hashOfConfig":"6"},{"size":2036,"mtime":1624323232008,"results":"7","hashOfConfig":"6"},{"size":452,"mtime":1624319839931,"results":"8","hashOfConfig":"6"},{"size":500,"mtime":1624321187273,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1j4ts2f",{"filePath":"13","messages":"14","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"C:\\Pedro Docs\\Testes\\React Queue\\PedrosDynamicTimer\\src\\index.tsx",[],["19","20","21","22","23"],"C:\\Pedro Docs\\Testes\\React Queue\\PedrosDynamicTimer\\src\\App.tsx",["24","25","26","27","28"],"C:\\Pedro Docs\\Testes\\React Queue\\PedrosDynamicTimer\\src\\styles\\App.ts",[],"C:\\Pedro Docs\\Testes\\React Queue\\PedrosDynamicTimer\\src\\styles\\global.ts",[],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":13,"column":23,"nodeType":"41","messageId":"42","endLine":13,"endColumn":37},{"ruleId":"39","severity":1,"message":"43","line":14,"column":23,"nodeType":"41","messageId":"42","endLine":14,"endColumn":37},{"ruleId":"44","severity":1,"message":"45","line":20,"column":29,"nodeType":"46","messageId":"47","endLine":20,"endColumn":32,"suggestions":"48"},{"ruleId":"44","severity":1,"message":"45","line":21,"column":12,"nodeType":"46","messageId":"47","endLine":21,"endColumn":15,"suggestions":"49"},{"ruleId":"50","severity":1,"message":"51","line":29,"column":3,"nodeType":"52","messageId":"53","endLine":29,"endColumn":14},"lines-around-directive",["54"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'setQueueStatus' is assigned a value but never used.","Identifier","unusedVar","'setQueueNumber' is assigned a value but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["55","56"],["57","58"],"no-console","Unexpected console statement.","MemberExpression","unexpected","padding-line-between-statements",{"messageId":"59","fix":"60","desc":"61"},{"messageId":"62","fix":"63","desc":"64"},{"messageId":"59","fix":"65","desc":"61"},{"messageId":"62","fix":"66","desc":"64"},"suggestUnknown",{"range":"67","text":"68"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"67","text":"69"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"70","text":"68"},{"range":"70","text":"69"},[606,609],"unknown","never",[637,640]]